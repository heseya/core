version: '3.7'
services:
#  app:
#    build:
#      context: ./docker
#      dockerfile: Dockerfile-dev
#    ports:
#      - ${DOCKER_PORT:-80}:80
#    restart: unless-stopped
#    volumes:
#      - .:/usr/src/app
#    command:
#      - bash
#      - -c
#      - |
#        if [ ! -f "/usr/src/init" ]; then
#          composer install
#          php artisan key:generate
#          sleep 15
#          php artisan migrate --seed
#          php artisan jwt:secret --always-no
#          touch /usr/src/init
#        fi
#        exec apache2-foreground
#    depends_on:
#      - mysql_service
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - ${DOCKER_PORT:-80}:80
    restart: unless-stopped
    env_file: .env
    depends_on:
      - mysql_service
#  app:
#    build: .
#    ports:
#      - ${DOCKER_PORT:-80}:80
#    restart: unless-stopped
#    depends_on:
#      - mysql_service
  queue:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    env_file: .env
    command: php artisan queue:work
    depends_on:
      - app
      - mysql_service
      - redis
  schedule:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    env_file: .env
    command: php artisan schedule:work
    depends_on:
      - app
      - mysql_service
      - redis
#  queue:
#    build:
#      context: ./docker
#      dockerfile: Dockerfile-dev
#    restart: unless-stopped
#    volumes:
#      - .:/usr/src/app
#    command: php artisan queue:work
#    depends_on:
#      - app
#      - mysql_service
#      - redis
#  schedule:
#    build:
#      context: ./docker
#      dockerfile: Dockerfile-dev
#    restart: unless-stopped
#    volumes:
#      - .:/usr/src/app
#    command: php artisan schedule:work
#    depends_on:
#      - app
#      - mysql_service
#      - redis
  mysql_service:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - ${DB_PORT:-3306}:3306
  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=mysql_service
    ports:
      - ${DOCKER_ADMINER_PORT:-8000}:8080
  redis:
    image: redis:5.0
    restart: unless-stopped
    ports:
      - ${REDIS_PORT:-6379}:6379
  silverbox:
    image: escolasoft/silverbox:latest
    restart: unless-stopped
    ports:
      - ${DOCKER_SILVERBOX_PORT:-8888}:80
    volumes:
      - ./silverbox:/var/www/html/storage/app
