Login:
  post:
    tags:
      - Auth
    summary: Login
    requestBody:
      content:
        application/json:
          schema:
            required:
              - email
              - password
            type: object
            properties:
              email:
                type: string
                example: admin@example.com
              password:
                type: string
                example: secret
              code:
                type: string
                example: XyDZR-M9GWZ
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    token:
                      type: string
                    identity_token:
                      type: string
                    refresh_token:
                      type: string
                    user:
                      $ref: './../schemas/Users.yml#/UserWithSavedAddresses'
                  type: object
              type: object
      403:
        description: 2FA code not provided
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    code:
                      type: number
                      example: 403
                    message:
                      type: string
                      example: Two-Factor Authentication is required
                    type:
                      type: string
                      example: email
                  type: object
              type: object
      422:
        description: Error
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Error.yml#/Error'
              type: object
            example:
              code: 422
              name: "Invalid Two-Factor Authentication token"

Logout:
  post:
    tags:
      - Auth
    summary: Logout
    responses:
      204:
        description: 'Success no content'

ResetPassword:
  post:
    tags:
      - Auth
    summary: 'Reset password'
    requestBody:
      $ref: './../requests/Auth.yml#/PasswordReset'
    responses:
      204:
        description: Success
    security:
      - BearerAuth: [ ]

ResetPasswordParams:
  get:
    tags:
      - Auth
    summary: 'Checks if token belongs to user with email'
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
          example: be55ec43d8f58c85b333605f06be1163091a697f2460d86755ca4324cf56cccc
        description: User token
      - in: path
        name: email
        required: true
        schema:
          type: string
          example: test@test.test
        description: User email
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    token:
                      type: string
                    identity_token:
                      type: string
                    refresh_token:
                      type: string
                    user:
                      $ref: './../schemas/Users.yml#/User'
                  type: object
              type: object
    security:
      - BearerAuth: [ ]

SaveResetPassword:
  put:
    tags:
      - Auth
    summary: 'save the reset password'
    requestBody:
      $ref: './../requests/Auth.yml#/PasswordResetSave'
    responses:
      204:
        description: Success
    security:
      - BearerAuth: [ ]

Password:
  put:
    tags:
      - Auth
    summary: 'Change password'
    requestBody:
      content:
        application/json:
          schema:
            properties:
              password:
                type: string
                example: secret
              password_new:
                type: string
                example: xsw@!QAZ34
            type: object
    responses:
      204:
        description: Success
    security:
      - BearerAuth: [ ]

Refresh:
  post:
    tags:
      - Auth
    summary: 'Refresh access and identity tokens'
    requestBody:
      content:
        application/json:
          schema:
            properties:
              refresh_token:
                type: string
            type: object
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    token:
                      type: string
                    identity_token:
                      type: string
                    refresh_token:
                      type: string
                    user:
                      $ref: './../schemas/Users.yml#/UserWithSavedAddresses'
                  type: object
              type: object

Profile:
  get:
    tags:
      - Auth
    summary: 'get your own user or app resource'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  oneOf:
                    - $ref: './../schemas/Users.yml#/UserViewWithSavedAddresses'
                    - $ref: './../schemas/Apps.yml#/AppView'
              type: object
    security:
      - BearerAuth: [ ]
  patch:
    tags:
      - Auth
    summary: 'edit your own user resource'
    requestBody:
      $ref: './../requests/Auth.yml#/UpdateProfile'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Users.yml#/UserView'
              type: object
    security:
      - BearerAuth: [ ]

Check:
  get:
    tags:
      - Auth
    summary: 'get profile resource of unauthenticated user'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Auth.yml#/ProfileView'
              type: object

CheckParams:
  get:
    tags:
      - Auth
    summary: 'get profile resource from identity token'
    parameters:
      - name: identity_token
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Auth.yml#/ProfileView'
              type: object

TFASetup:
  post:
    tags:
      - Auth
    summary: 2FA Setup
    requestBody:
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                description: app | email
                example: app
            type: object
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  oneOf:
                    - $ref: './../schemas/Auth.yml#/TFASetupApp'
                    - $ref: './../schemas/Auth.yml#/TFASetupEmail'
              type: object

TFAConfirm:
  post:
    tags:
      - Auth
    summary: 2FA Confirm
    requestBody:
      content:
        application/json:
          schema:
            properties:
              code:
                type: string
                example: 123456
            type: object
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    recovery_codes:
                      type: array
                      items:
                        type: string
                        example: XyDZR-M9GWZ
              type: object

TFARecoveryCreate:
  post:
    tags:
      - Auth
    summary: 2FA Create recovery codes
    requestBody:
      content:
        application/json:
          schema:
            properties:
              password:
                type: string
                example: secret
            type: object
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    recovery_codes:
                      type: array
                      items:
                        type: string
                        example: XyDZR-M9GWZ
              type: object

TFARemove:
  post:
    tags:
      - Auth
    summary: 2FA Remove
    requestBody:
      content:
        application/json:
          schema:
            properties:
              password:
                type: string
                example: secret
            type: object
    responses:
      204:
        description: Success

Register:
  post:
    tags:
      - Auth
    summary: 'Register new user'
    requestBody:
      $ref: './../requests/Auth.yml#/Register'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: './../schemas/Users.yml#/User'
            example:
              data:
                id: 026bc5f6-8373-4aeb-972e-e78d72a67121
                email: admin@example.com
                name: 'Registered user'
                avatar: '//www.gravatar.com/avatar/example.jpg'
                roles:
                  - id: 026bc5f6-8373-4aeb-972e-e78d72a67121
                    name: 'Authenticated'
                    description: 'Authenticated user role'
                    assignable: false
                    deletable: false
                consents:
                  - name: 'Consent one'
                    description_html: '<h1>Lorem ipsum dolor sit amet</h1>'
                    required: false
                    value: true
                  - name: 'Consent two'
                    description_html: '<h1>Lorem ipsum dolor sit amet</h1>'
                    required: true
                    value: true
    security:
      - BearerAuth: [ ]

ShippingAddresses:
  post:
    tags:
      - Auth
    summary: 'Add shipping address to user'
    requestBody:
      $ref: './../requests/SavedAddresses.yml#/SavedAddress'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]

ShippingAddressesParams:
  patch:
    tags:
      - Auth
    summary: 'Update user shipping address'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
    requestBody:
      $ref: './../requests/SavedAddresses.yml#/SavedAddress'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]
  delete:
    tags:
      - Auth
    summary: 'Delete user shipping address'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]

BillingAddresses:
  post:
    tags:
      - Auth
    summary: 'Add billing address to user'
    requestBody:
      $ref: './../requests/SavedAddresses.yml#/SavedAddress'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]

BillingAddressesParams:
  patch:
    tags:
      - Auth
    summary: 'Update user billing address'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
    requestBody:
      $ref: './../requests/SavedAddresses.yml#/SavedAddress'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]
  delete:
    tags:
      - Auth
    summary: 'Delete user billing address'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/SavedAddresses.yml#/SavedAddress'
              type: object
    security:
      - BearerAuth: [ ]
