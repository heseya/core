Orders:
  get:
    tags:
      - Orders
    summary: 'orders list'
    parameters:
      - name: search
        in: query
        description: 'Full text search.'
        schema:
          type: string
      - name: sort
        in: query
        description: 'Sorting string.'
        schema:
          type: string
          example: 'code:asc,created_at:desc,id:asc,email:desc,summary:desc'
      - name: status_id
        in: query
        description: 'Status UUID'
        schema:
          type: string
      - name: shipping_method_id
        in: query
        description: 'Shipping Method UUID'
        schema:
          type: string
      - name: paid
        in: query
        description: 'Is order paid'
        schema:
          type: boolean
      - name: from
        in: query
        description: 'Date datetime from'
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: 'Date datetime to'
        schema:
          type: string
          format: date-time
      - name: metadata
        in: query
        description: search by metadata
        style: deepObject
        explode: true
        required: false
        schema:
          $ref: '../schemas/Metadata.yml#/MetadataQuery'
      - name: metadata_private
        in: query
        description: search by metadata private
        style: deepObject
        explode: true
        required: false
        schema:
          $ref: '../schemas/Metadata.yml#/MetadataQuery'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/Orders.yml#/OrderList'
              type: object
    security:
      - BearerAuth: [ ]
  post:
    tags:
      - Orders
    summary: 'add new order'
    requestBody:
      $ref: './../requests/Orders.yml#/OrderCreate'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Orders.yml#/OrderSummary'
              type: object

OrdersParams:
  get:
    tags:
      - Orders
    summary: 'order view'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Orders.yml#/OrderView'
              type: object
    security:
      - BearerAuth: [ ]
  patch:
    tags:
      - Orders
    summary: 'update order'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    requestBody:
      $ref: './../requests/Orders.yml#/OrderUpdate'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Orders.yml#/OrderView'
              type: object
    security:
      - BearerAuth: [ ]

OrdersCode:
  get:
    tags:
      - Orders
    summary: 'public order view'
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          example: D3PT88
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Orders.yml#/OrderSummary'
              type: object

OrdersVerify:
  post:
    tags:
      - Orders
    summary: 'verify cart'
    requestBody:
      content:
        application/json:
          schema:
            properties:
              items:
                type: array
                items:
                  properties:
                    product_id:
                      type: string
                      example: 026bc5f6-8373-4aeb-972e-e78d72a67121
                    quantity:
                      type: number
                    schemas:
                      properties:
                        119c0a63-1ea1-4769-8d5f-169f68de5598:
                          type: string
                          example: 123459fb-39a4-4dd0-8240-14793aa1f73b
                        02b97693-857c-4fb9-9999-47400ac5fbef:
                          type: string
                          example: 'HE + YA'
                      type: object
                  type: object
            type: object
    responses:
      204:
        description: Success

OrdersStatus:
  patch:
    tags:
      - Orders
    summary: 'change order status'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    requestBody:
      content:
        application/json:
          schema:
            properties:
              status_id:
                type: integer
            type: object
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/Orders.yml#/Order'
              type: object
    security:
      - BearerAuth: [ ]

OrdersMy:
  get:
    tags:
      - Orders
    summary: 'user orders list'
    parameters:
      - name: search
        in: query
        description: 'Full text search.'
        schema:
          type: string
      - name: sort
        in: query
        description: 'Sorting string.'
        schema:
          type: string
          example: 'code:asc,created_at:desc,id:asc,email:desc,summary:desc'
      - name: status_id
        in: query
        description: 'Status UUID'
        schema:
          type: string
      - name: shipping_method_id
        in: query
        description: 'Shipping Method UUID'
        schema:
          type: string
      - name: from
        in: query
        description: 'Date datetime from'
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: 'Date datetime to'
        schema:
          type: string
          format: date-time
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: './../schemas/Orders.yml#/Order'
              type: object
    security:
      - BearerAuth: [ ]

OrdersMyId:
  get:
    tags:
      - Orders
    summary: 'user order view'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Orders.yml#/OrderView'
              type: object
    security:
      - BearerAuth: [ ]

OrdersCodePay:
  post:
    tags:
      - Orders
    summary: 'redirect to payment'
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: payment_method
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            properties:
              continue_url:
                description: 'URL that the buyer will be redirected to, after making payment'
                type: string
            type: object
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Payments.yml#/Payment'
              type: object

OrdersCodePayOffline:
  post:
    tags:
      - Orders
    summary: 'manualy create fulfilled order payment'
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Payments.yml#/Payment'
              type: object

OrderAddDocument:
  post:
    tags:
      - Orders
    summary: 'add document'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                example: test
              file:
                type: string
                format: binary
              type:
                type: string
                example: invoice
    responses:
      200:
        description: Ok
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Documents.yml#/Document'
              type: object

OrderDeleteDocument:
  delete:
    tags:
      - Orders
    summary: 'delete document'
    parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
          example: d1365285-ad58-48da-88e2-99e9f4c0800d
      - name: doc_id
        in: path
        required: true
        schema:
          type: string
          example: d1365285-ad58-48da-88e2-99e9f4c0800d
    responses:
      204:
        description: No content
    security:
      - BearerAuth: [ ]

OrderDownloadDocument:
  get:
    tags:
      - Orders
    summary: 'downloads document'
    parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
          example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      - name: doc_id
        in: path
        required: true
        schema:
          type: string
          example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
    responses:
      200:
        description: A PDF file
        content:
          application/pdf:
            schema:
              example: test
              type: string
              format: binary
    security:
      - BearerAuth: [ ]

OrdersDocumentsSend:
  post:
    tags:
      - Orders
    summary: 'send documents'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              uuid:
                type: array
                items:
                  type: string
                  example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    responses:
      204:
        description: No content

CartProcess:
  post:
    tags:
      - Orders
    summary: 'validate cart items and coupons'
    requestBody:
      $ref: './../requests/Cart.yml#/CartProcess'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: './../schemas/Cart.yml#/Cart'
              type: object
