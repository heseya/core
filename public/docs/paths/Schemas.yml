Schemas:
  get:
    tags:
      - Schemas
    summary: 'all schemas list'
    operationId: 170c0b7f342ea07d3a8a3049dd252ca4
    parameters:
      - name: name
        in: query
        schema:
          type: string
          example: test
      - name: hidden
        in: query
        schema:
          type: boolean
          example: true
      - name: required
        in: query
        schema:
          type: boolean
          example: true
      - name: search
        in: query
        schema:
          type: string
          example: test
      - name: sort
        in: query
        schema:
          type: string
          example: test
      - name: metadata
        in: query
        description: search by metadata
        style: deepObject
        explode: true
        required: false
        schema:
          $ref: '../schemas/Metadata.yml#/MetadataQuery'
      - name: metadata_private
        in: query
        description: search by metadata private
        style: deepObject
        explode: true
        required: false
        schema:
          $ref: '../schemas/Metadata.yml#/MetadataQuery'
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  type: array
                  items:
                    $ref: '../schemas/Schemas.yml#/SchemaMetadata'
              type: object
    security:
      - BearerAuth: [ ]

  post:
    tags:
      - Schemas
    summary: 'create schema'
    operationId: d103be543bfb100b60eaa7b27eb5e150
    requestBody:
      $ref: '../requests/Schemas.yml#/SchemaStore'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '../schemas/Schemas.yml#/SchemaMetadata'
              type: object
    security:
      - BearerAuth: [ ]

SchemasParam:
  get:
    tags:
      - Schemas
    operationId: 73d12dd89ba8210a22b5240704e63ee8
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '../schemas/Schemas.yml#/SchemaMetadata'
              type: object
    security:
      - BearerAuth: [ ]

  delete:
    tags:
      - Schemas
    operationId: 459ce0314ef100d188cd1d1d04025e99
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    responses:
      204:
        description: Success
    security:
      - BearerAuth: [ ]

  patch:
    tags:
      - Schemas
    summary: 'update schema'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
    operationId: 809f90ba94d09b70423a5d7ceeedb2ff
    requestBody:
      $ref: '../requests/Schemas.yml#/SchemaUpdate'
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '../schemas/Schemas.yml#/SchemaMetadata'
              type: object
    security:
      - BearerAuth: [ ]
