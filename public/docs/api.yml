openapi: 3.0.0
info:
  title: 'Heseya Store API'
  description: "IMPORTANT!!! Auth locks replaced with permissions:\n     *   <https://escl24.atlassian.net/wiki/spaces/HES/pages/6476169217/Autoryzacja>.\n     *   You need specific permissions to access each endpoint."
  version: 2.0.0
paths:
  /analytics/payments:
    get:
      tags:
        - Analytics
      summary: 'Summary of all payments over a period of time'
      description: "\n     *       Returns total amount and count of payments. By default period is last year.\n     *       Results are grouped in specified time frames.\n     *   "
      operationId: d66c4ebadd485eeef6d72f508f1f6533
      parameters:
        - name: from
          in: path
          description: 'date datetime or timestamp by default in UTC+0; required if ''to'' is set'
          schema:
            type: string
          example: '2021-03-23'
        - name: to
          in: path
          description: 'date datetime or timestamp by default in UTC+0'
          schema:
            type: string
          example: '2021-04-23 15:37'
        - name: group
          in: path
          description: total/yearly/monthly/daily/hourly
          schema:
            type: string
          example: total
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      $timeframe:
                        description: 'formatted time frame in UTC+0 eg.: for monthly - "YYYY-MM", for hourly - "YYYY-MM-DD HH", for total "total"'
                        properties:
                          amount:
                            description: 'total money amount'
                            type: number
                            example: 1234.57
                          count:
                            description: 'total payment count'
                            type: integer
                            example: 13
                        type: object
                    type: object
                type: object
      security:
        - oauth: [ ]
  /apps:
    get:
      tags:
        - Apps
      summary: 'All registered app list'
      operationId: 6eaf1692950938c71bffef610a2c941a
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/App'
                type: object
    post:
      tags:
        - Apps
      summary: 'install a new app'
      operationId: 4936b400005af864ddd432ac0b476995
      requestBody:
        $ref: '#/components/requestBodies/AppStore'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AppView'
                type: object
  '/apps/id:{id}':
    get:
      tags:
        - Apps
      summary: 'show an app'
      operationId: 690076eb463ceb173c9ed46a2cd8e114
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AppView'
                type: object
    delete:
      tags:
        - Apps
      summary: 'delete app'
      operationId: 127981a2da0d4a3a6231136a8e30c6a1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
        - name: force
          in: query
          description: 'Force removal of the app'
          allowEmptyValue: true
          schema:
            type: boolean
      responses:
        204:
          description: Success
  '/audits/{object}/id:{id}':
    get:
      tags:
        - Audits
      summary: 'list changes for object'
      operationId: e30e643af2cbd18d3525f753fed7082e
      parameters:
        - name: object
          in: path
          required: true
          schema:
            type: string
            example: products
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 026bc5f6-8373-4aeb-972e-e78d72a67121
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Audit'
                type: object
  /login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: 614c182a075050a98da662867ad0229b
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: secret
              type: object
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      token:
                        type: string
                      identity_token:
                        type: string
                      refresh_token:
                        type: string
                      user:
                        $ref: '#/components/schemas/User'
                    type: object
                type: object
  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout
      operationId: 6ff250949d00a5e056f9f8c1fdbec616
      responses:
        204:
          description: 'Success no content'
  /users/reset-password:
    post:
      tags:
        - Auth
      summary: 'Reset password'
      operationId: 7915410e7e769ad485b7eb82fb1c385e
      requestBody:
        $ref: '#/components/requestBodies/PasswordReset'
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
  '/users/reset-password/{token}/{email}':
    get:
      tags:
        - Auth
      summary: 'Show reset password form'
      operationId: 76d8f27a85dee87959d9c7edc649ca59
      responses:
        200:
          description: Success
      security:
        - oauth: [ ]
  /users/save-reset-password:
    patch:
      tags:
        - Auth
      summary: 'save the reset password'
      operationId: 3c1ccfbf05683f16bb36d3fb43f35c59
      requestBody:
        $ref: '#/components/requestBodies/PasswordResetSave'
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
  /users/password:
    patch:
      tags:
        - Auth
      summary: 'Change password'
      operationId: 0f7a47857c09912027137b06abb412ef
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                  example: secret
                password_new:
                  type: string
                  example: xsw@!QAZ34
              type: object
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: 'Refresh access and identity tokens'
      operationId: b6ef47cb38556f09d94a219bb10ce868
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
              type: object
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      token:
                        type: string
                      identity_token:
                        type: string
                      refresh_token:
                        type: string
                      user:
                        $ref: '#/components/schemas/User'
                    type: object
                type: object
  /auth/login-history:
    get:
      tags:
        - Auth
      summary: 'Get login history'
      responses:
        200:
          description: Success
      deprecated: true
      security:
        - oauth: [ ]
  '/auth/kill-session/id:{id}':
    get:
      tags:
        - Auth
      summary: 'Allow to ''kill'' active session'
      parameters:
        - name: id
          in: path
          description: 'token id from the table ''oauth_access_tokens'''
          required: true
          schema:
            type: string
            example: 47e380b746d6cacb20473b82d911b2701a3c05422c65cbc4872045a100fcb72be554ad1680aef2bf
      responses:
        200:
          description: Success
      deprecated: true
      security:
        - oauth: [ ]
  /auth/kill-all-sessions:
    get:
      tags:
        - Auth
      summary: 'Allow to ''kill'' all old sessions'
      responses:
        200:
          description: Success
      deprecated: true
      security:
        - oauth: [ ]
  /auth/profile:
    get:
      tags:
        - Auth
      summary: 'get your own user or app resource'
      operationId: 3b669647885ea36d62385cce472ba888
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/UserView'
                      - $ref: '#/components/schemas/AppView'
                type: object
      security:
        - oauth: [ ]
  /auth/check:
    get:
      tags:
        - Auth
      summary: 'get profile resource of unauthenticated user'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ProfileView'
                type: object
  '/auth/check/{identity_token}':
    get:
      tags:
        - Auth
      summary: 'get profile resource from identity token'
      operationId: bc7e17afb88db22a3ec32aa00f229f15
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ProfileView'
                type: object
  /countries:
    get:
      tags:
        - Shipping
      summary: 'list of all countries'
      operationId: b1d502eba1de967f0843e48c0453b9b8
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Country'
                type: object
  /deposits:
    get:
      tags:
        - Deposits
      summary: 'list deposits'
      operationId: a03051d488c250841fe7c20bd6990add
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deposit'
                type: object
      security:
        - oauth: [ ]
  '/items/id:{id}/deposits':
    get:
      tags:
        - Deposits
      summary: 'list item deposits'
      operationId: 5099397a62f56c528043dae36a470bdd
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Deposit'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Deposits
      summary: 'add new deposit'
      operationId: ae0156fddd1d7b7a2bd04984741711f4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Deposit'
                type: object
      security:
        - oauth: [ ]
  /discounts:
    get:
      tags:
        - Discounts
      summary: 'get all discounts'
      operationId: 48cb22131f7f432605564e1929459975
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Discount'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Discounts
      summary: 'add new discount'
      operationId: 2fc4fbd324ec2ae8d910665255d1a3c0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Discount'
                type: object
      security:
        - oauth: [ ]
  '/discounts/{code}':
    get:
      tags:
        - Discounts
      summary: 'show discount'
      operationId: f961a76e9e4cd4035be42b73e8076385
      parameters:
        - name: code
          in: path
          required: false
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Discount'
                type: object
  '/discounts/id:{id}':
    delete:
      tags:
        - Discounts
      summary: 'delete discount'
      operationId: 696b261316fff870c9f296902a6f116e
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Discounts
      summary: 'update discount'
      operationId: 0ce28dd72c4a02adb46ddd0768ad7f6b
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Discount'
                type: object
      security:
        - oauth: [ ]
  /webhooks/events:
    get:
      tags:
        - WebHooks
      summary: 'list available events'
      operationId: 6414d6482ecea4faf4b1754015e9df32
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                type: object
  /furgonetka/create-package:
    post:
      tags:
        - Furgonetka
      summary: 'creates package on furgonetka'
      operationId: 6edcc011870082e4d26f4657fec9f374
      requestBody:
        content:
          application/json:
            schema:
              properties:
                order_id:
                  type: string
                  example: 0246aa10-2585-44c0-8937-f7155af61f03
                package_template_id:
                  type: string
                  example: 8026e9a2-78f8-456c-9008-48c77442e9a4
              type: object
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  shipping_number:
                    type: string
                    example: 0000000773354Q
                type: object
      security:
        - oauth: [ ]
  /items:
    get:
      tags:
        - Items
      summary: 'list items'
      operationId: fb17b17e6e977f8de38a545f2af09116
      parameters:
        - name: search
          in: query
          description: 'Full text search'
          schema:
            type: string
        - name: name
          in: query
          description: 'Name search'
          schema:
            type: string
        - name: sku
          in: query
          description: 'Sku search'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Item'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Items
      summary: 'add new item'
      operationId: a3915553e021c4fa0ab6d313df9d4369
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
                type: object
      security:
        - oauth: [ ]
  '/items/id:{id}':
    get:
      tags:
        - Items
      summary: 'view item'
      operationId: 2cd8385badc622da6b55243dd17ac0fe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Items
      summary: 'delete item'
      operationId: ec933ea4411015e739bbab2e07d01dca
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Items
      summary: 'update item'
      operationId: b1ef0bdc3dee72a4cd944ee205c2fc99
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
                type: object
      security:
        - oauth: [ ]
  /media:
    $ref: './paths/Media.yml#Media'
  '/media/id:{id}':
    $ref: './paths/Media.yml#MediaParams'
  /orders:
    get:
      tags:
        - Orders
      summary: 'orders list'
      operationId: 9fdf75d4b6f010f07127a71f418336b1
      parameters:
        - name: search
          in: query
          description: 'Full text search.'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sorting string.'
          schema:
            type: string
            example: 'code:asc,created_at:desc,id'
        - name: status_id
          in: query
          description: 'Status UUID'
          schema:
            type: string
        - name: shipping_method_id
          in: query
          description: 'Shipping Method UUID'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Orders
      summary: 'add new order'
      operationId: 1ac8dd2092fc982c39aedc5d9a26e913
      requestBody:
        $ref: '#/components/requestBodies/OrderCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                type: object
  '/orders/id:{id}':
    get:
      tags:
        - Orders
      summary: 'order view'
      operationId: f3bcb423d9b3c6b686a18f4b4b9d3131
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            example: D3PT88
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderView'
                type: object
      security:
        - oauth: [ ]
  '/orders/{code}':
    get:
      tags:
        - Orders
      summary: 'public order view'
      operationId: 6625361c5cdd8384723a3b8521b0e96f
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            example: D3PT88
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderSummary'
                type: object
  /orders/verify:
    post:
      tags:
        - Orders
      summary: 'verify cart'
      operationId: b9ce9843f58d7031838020052d4bb4d7
      requestBody:
        request: OrderCreate
        content:
          application/json:
            schema:
              properties:
                items:
                  type: array
                  items:
                    properties:
                      product_id:
                        type: string
                        example: 026bc5f6-8373-4aeb-972e-e78d72a67121
                      quantity:
                        type: number
                      schemas:
                        properties:
                          119c0a63-1ea1-4769-8d5f-169f68de5598:
                            type: string
                            example: 123459fb-39a4-4dd0-8240-14793aa1f73b
                          02b97693-857c-4fb9-9999-47400ac5fbef:
                            type: string
                            example: 'HE + YA'
                        type: object
                    type: object
              type: object
      responses:
        204:
          description: Success
  '/orders/id:{id}/status':
    post:
      tags:
        - Orders
      summary: 'change order status'
      operationId: 845b68fa22a7f832784446b0c89a40e4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
      requestBody:
        request: OrderCreate
        content:
          application/json:
            schema:
              properties:
                status_id:
                  type: integer
              type: object
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                type: object
      security:
        - oauth: [ ]
  '/orders/id:{order:id}':
    patch:
      tags:
        - Orders
      summary: 'update order'
      operationId: ff53701d16615e693cfb247e129858b5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
      requestBody:
        $ref: '#/components/requestBodies/OrderUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                type: object
      security:
        - oauth: [ ]
  /orders/my:
    get:
      tags:
        - Orders
      summary: 'user orders list'
      operationId: 1666cc5faba950ee39069c3a6690f65e
      parameters:
        - name: search
          in: query
          description: 'Full text search.'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sorting string.'
          schema:
            type: string
            example: 'code:asc,created_at:desc,id'
        - name: status_id
          in: query
          description: 'Status UUID'
          schema:
            type: string
        - name: shipping_method_id
          in: query
          description: 'Shipping Method UUID'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                type: object
      security:
        - oauth: [ ]
  '/orders/my/id:{id}':
    get:
      tags:
        - Orders
      summary: 'user order view'
      operationId: a24084e9a72ca4c8b2010b31195e97f6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderView'
                type: object
      security:
        - oauth: [ ]
  /package-templates:
    get:
      tags:
        - Packages
      summary: 'list packages'
      operationId: 521fda12b023dd7945d369e3c30599c5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PackageTemplateSwagger'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Packages
      summary: 'add new package'
      operationId: 3691fc47dd8ccedc165fba9f01cc7e48
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTemplateSwagger'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PackageTemplateSwagger'
                type: object
      security:
        - oauth: [ ]
  '/package-templates/id:{id}':
    delete:
      tags:
        - Packages
      summary: 'delete package'
      operationId: 0b01c1ca12327aac13892b9e5b103c0f
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Packages
      summary: 'update package'
      operationId: c52220735d551c071d0d4e04ddc13a8e
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTemplateSwagger'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PackageTemplateSwagger'
                type: object
      security:
        - oauth: [ ]
  /pages:
    get:
      tags:
        - Pages
      summary: 'list page'
      operationId: 82fdf932ecaac31515345d77358bcbe7
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                type: object
    post:
      tags:
        - Pages
      summary: 'add new page'
      operationId: e8d6c6d7cc98ba67b75a91855dbb0e1b
      requestBody:
        $ref: '#/components/requestBodies/PageStore'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PageView'
                type: object
      security:
        - oauth: [ ]
  '/pages/{slug}':
    get:
      tags:
        - Pages
      summary: 'single page view'
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PageView'
                type: object
  '/pages/id:{id}':
    get:
      tags:
        - Pages
      summary: alias
      operationId: ba0bd4e0f9d4ce9c18da285fd3c93bcc
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PageView'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Pages
      summary: 'delete page'
      operationId: 5284a2b1e29dda6d65eb3a091e592c8b
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Pages
      summary: 'update page'
      operationId: 692a2573c6f6f2da427600913c1e29f7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/PageUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PageView'
                type: object
      security:
        - oauth: [ ]
  /pages/reorder:
    post:
      tags:
        - Pages
      summary: 'change pages order'
      operationId: 85d901e3118685015dc71cc1543d25a9
      requestBody:
        $ref: '#/components/requestBodies/PageReorder'
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
  '/orders/{code}/pay/{payment_method}':
    post:
      tags:
        - Orders
      summary: 'redirect to payment'
      operationId: ce35e608cbca74b8595bda28675782f9
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: payment_method
          in: path
          required: true
          schema:
            type: string
      requestBody:
        request: OrderCreate
        content:
          application/json:
            schema:
              properties:
                continue_url:
                  description: 'URL that the buyer will be redirected to, after making payment'
                  type: string
              type: object
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                type: object
  '/payments/{payment_method}':
    post:
      tags:
        - Payments
      summary: 'Update payment status by payment provider'
      operationId: 87db72643167a8d9469558df40c05231
      parameters:
        - name: payment_method
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
  '/orders/{code}/pay/offline':
    post:
      tags:
        - Orders
      summary: 'manualy create fulfilled order payment'
      operationId: 1972f4f3980985d1c0be469614a805bb
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                type: object
  /payment-methods:
    get:
      tags:
        - Payments
      summary: 'list payment methods'
      operationId: a5d642e5e63ae3dda3cb909c5351b547
      parameters:
        - name: shipping_method_id
          in: query
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
                type: object
    post:
      tags:
        - Payments
      summary: 'add new payment method'
      operationId: a1c14fd09370fc6041c760526a64b8f0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
                type: object
      security:
        - oauth: [ ]
  '/payment-methods/id:{id}':
    delete:
      tags:
        - Payments
      summary: 'delete payment method'
      operationId: 9cecbc6d17aacf389f118ea0dc39fa68
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Payments
      summary: 'update payment method'
      operationId: 290a917d70c611b728be451ed227b2e7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
                type: object
      security:
        - oauth: [ ]
  /permissions:
    get:
      tags:
        - Roles
      summary: 'list of permissions'
      operationId: 7e9aeafb806872b889961c1686a8331a
      parameters:
        - name: assignable
          in: query
          description: 'Is the permission assignable by current user'
          schema:
            type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permission'
                type: object
      security:
        - oauth: [ ]
  /products:
    $ref: './paths/Products.yml#Products'
  '/products/{slug}':
    $ref: './paths/Products.yml#ProductsSlug'
  '/products/id:{id}':
    $ref: './paths/Products.yml#ProductsParams'
  /product-sets:
    $ref: './paths/ProductSets.yml#ProductSets'
  '/product-sets/{slug}':
    $ref: './paths/ProductSets.yml#ProductSetsSlug'
  '/product-sets/id:{id}':
    $ref: './paths/ProductSets.yml#ProductSetsParams'
  /product-sets/reorder:
    $ref: './paths/ProductSets.yml#ProductSetsReorder'
  '/product-sets/reorder/id:{id}':
    $ref: './paths/ProductSets.yml#ProductSetsReorderParams'
  '/product-sets/id:{id}/products':
    $ref: './paths/ProductSets.yml#ProductSetsProducts'
  /roles:
    get:
      tags:
        - Roles
      summary: 'list roles'
      operationId: 1ee69486b9b73ea9a99a272e7e8cc4a8
      parameters:
        - name: search
          in: query
          description: 'Full text search'
          schema:
            type: string
        - name: name
          in: query
          description: 'Name search'
          schema:
            type: string
        - name: description
          in: query
          description: 'Description search'
          schema:
            type: string
        - name: assignable
          in: query
          description: 'Is the role assignable by current user'
          schema:
            type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Roles
      summary: 'add a new role'
      operationId: 62fcd42f85f47e343b6f52de4dc13ac8
      requestBody:
        $ref: '#/components/requestBodies/RoleStore'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RoleView'
                type: object
      security:
        - oauth: [ ]
  '/roles/id:{id}':
    get:
      tags:
        - Roles
      summary: 'view the role'
      operationId: 08386bda355d39cf0af6f115a8084e52
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RoleView'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Roles
      summary: 'delete the role'
      operationId: 7ed75454a751735873bcd73f3eb08be8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Roles
      summary: 'update the role'
      operationId: 7624efb612f704e4ae632a365952ffc4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RoleUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RoleView'
                type: object
      security:
        - oauth: [ ]
  /schemas:
    get:
      tags:
        - Schemas
      summary: 'all schemas list'
      operationId: 170c0b7f342ea07d3a8a3049dd252ca4
      requestBody:
        $ref: '#/components/requestBodies/IndexSchema'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Schema'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Schemas
      summary: 'create schema'
      operationId: d103be543bfb100b60eaa7b27eb5e150
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Schema'
                type: object
      security:
        - oauth: [ ]
  '/schemas/id:{id}':
    get:
      tags:
        - Schemas
      operationId: 73d12dd89ba8210a22b5240704e63ee8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Schema'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Schemas
      operationId: 459ce0314ef100d188cd1d1d04025e99
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Schemas
      summary: 'update schema'
      operationId: 809f90ba94d09b70423a5d7ceeedb2ff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Schema'
                type: object
      security:
        - oauth: [ ]
  /seo:
    $ref: './paths/Seo.yml#Seo'
  /seo/check:
    $ref: './paths/Seo.yml#SeoCheck'
  /settings:
    get:
      tags:
        - Settings
      summary: 'list settings'
      operationId: 6aa918d4f157546caf34e9bfb7983448
      parameters:
        - name: array
          in: query
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Setting'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Settings
      summary: 'add new setting'
      operationId: 139ba84032e309923174c5ad0fa849d5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setting'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Setting'
                type: object
      security:
        - oauth: [ ]
  '/settings/{name}':
    get:
      tags:
        - Settings
      summary: 'view setting'
      operationId: 5fdde9e40352f6b79ba7bfae0aafeda9
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Setting'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Settings
      summary: 'delete setting'
      operationId: 9bc3e39ceddf56c192bfb169c970208f
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Settings
      summary: 'update setting'
      operationId: e7664e5cd7086145821ce8e97333f8da
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setting'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Setting'
                type: object
      security:
        - oauth: [ ]
  /shipping-methods:
    get:
      tags:
        - Shipping
      summary: 'list shipping methods by filters'
      operationId: 6b997fdddd17af8be38f253492ed9fe0
      parameters:
        - name: country
          in: query
          required: false
          schema:
            type: string
            example: DE
        - name: cart_value
          in: query
          required: false
          schema:
            type: number
            example: 1200
      requestBody:
        $ref: '#/components/requestBodies/ShippingMethodIndex'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShippingMethod'
                type: object
    post:
      tags:
        - Shipping
      summary: 'add new shipping method'
      operationId: 146da59d2a85cd097a5639d030ccc60d
      requestBody:
        $ref: '#/components/requestBodies/ShippingMethodStore'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ShippingMethod'
                type: object
      security:
        - oauth: [ ]
  '/shipping-methods/id:{id}':
    delete:
      tags:
        - Shipping
      summary: 'delete shipping method'
      operationId: 4a50d0bcb5729b8f65d70f1566d96add
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: d1365285-ad58-48da-88e2-99e9f4c0800d
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Shipping
      summary: 'update shipping method'
      operationId: 2b0d377eba101ec6eae3d6bd74dd0571
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: d1365285-ad58-48da-88e2-99e9f4c0800d
      requestBody:
        $ref: '#/components/requestBodies/ShippingMethodUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ShippingMethod'
                type: object
      security:
        - oauth: [ ]
  /shipping-methods/reorder:
    post:
      tags:
        - Shipping
      summary: 'Reorder shipping method'
      operationId: 56b99079c09a03f4584b199623e830d0
      requestBody:
        $ref: '#/components/requestBodies/ShippingMethodReorder'
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
  /statuses:
    $ref: './paths/Statuses.yml#/Statuses'
  '/statuses/id:{id}':
    $ref: './paths/Statuses.yml#/StatusesParams'
  /statuses/reorder:
    $ref: './paths/Statuses.yml#StatusesReorder'
  /tags:
    $ref: './paths/Tags.yml#Tags'
  '/tags/id:{id}':
    $ref: './paths/Tags.yml#TagsParams'
  /users:
    get:
      tags:
        - Users
      summary: 'user list'
      operationId: f032a91b3abe7f269e51caca28180cbc
      parameters:
        - name: search
          in: query
          description: 'Full text search'
          schema:
            type: string
        - name: name
          in: query
          description: 'Name search'
          schema:
            type: string
        - name: name
          in: query
          description: 'Email search'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sorting string'
          schema:
            type: string
          example: 'name:desc'
        - name: pagination_limit
          in: query
          description: 'Number of elements per page'
          schema:
            type: number
          example: 12
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                type: object
      security:
        - oauth: [ ]
    post:
      tags:
        - Users
      summary: 'add new user'
      operationId: f606067fc259a8e463c576a68154b9cb
      requestBody:
        $ref: '#/components/requestBodies/UserCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
      security:
        - oauth: [ ]
  '/users/id:{id}':
    get:
      tags:
        - Users
      summary: 'user view'
      operationId: ee3780fa0db72f4a5375174edb7aced4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
      security:
        - oauth: [ ]
    delete:
      tags:
        - Users
      summary: 'delete user'
      operationId: 6942c632e12ffeb39f53a7337272409c
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - Users
      summary: 'update user'
      operationId: 5f078fc7c3a41ecfec08d2a748920615
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 1c8705ce-5fae-4468-b88a-8784cb5414a0
      requestBody:
        $ref: '#/components/requestBodies/UserUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
      security:
        - oauth: [ ]
  /webhooks:
    get:
      tags:
        - WebHooks
      summary: 'list webhooks by filters'
      operationId: f117e0d9744b820cd732d70bd7457c6d
      parameters:
        - name: name
          in: query
          description: 'Name search'
          allowEmptyValue: true
          schema:
            type: string
        - name: url
          in: query
          description: 'URL search'
          allowEmptyValue: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebHook'
                type: object
    post:
      tags:
        - WebHooks
      summary: 'add new webhook'
      operationId: 24a5ff9bca8d89624ddc8639312d8360
      requestBody:
        $ref: '#/components/requestBodies/WebHookCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/WebHook'
                type: object
      security:
        - oauth: [ ]
  '/webhooks/id:{id}':
    get:
      tags:
        - WebHooks
      summary: 'show webhook'
      operationId: ed3a1cc4a7dc4d00ecb95aedb2eba3ea
      parameters:
        - name: id
          in: path
          description: 'Name search'
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/WebHook'
                type: object
    delete:
      tags:
        - WebHooks
      summary: 'delete webhook'
      operationId: 6b66c3b845cda9fb9fe63f7e1415392c
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      responses:
        204:
          description: Success
      security:
        - oauth: [ ]
    patch:
      tags:
        - WebHooks
      summary: 'update webhook'
      operationId: 6592bce5d0ff79a23fd8060baf69d225
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 5b320ba6-d5ee-4870-bed2-1a101704c2c4
      requestBody:
        $ref: './requests/WebHookUpdate.yml#WebHookUpdate'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/WebHook'
                type: object
      security:
        - oauth: [ ]
components:
  schemas:
    Error:
      properties:
        code:
          description: 'Http response code.'
          type: integer
          example: 500
        message:
          description: 'Error message.'
          type: string
          example: 'Some error message.'
      type: object
    OrderView:
      type: object
      allOf:
        - $ref: '#/components/schemas/Order'
        - properties:
            user:
              $ref: '#/components/schemas/User'
    App:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        url:
          description: 'Root url of the application'
          type: string
          example: 'https://app.heseya.com'
        microfrontend_url:
          description: 'Url of the applications microfrontend configuration page'
          type: string
          example: 'https://microfront.app.heseya.com'
        name:
          description: 'Name of the app'
          type: string
          example: 'Super App'
        slug:
          description: 'Unique slugified name'
          type: string
          example: super_app
        version:
          description: 'App version'
          type: string
          example: ^1.0.0
        description:
          description: 'Description of the app'
          type: string
          example: 'App responsible for creating products page layout'
        icon:
          description: 'App icon url'
          type: string
          example: 'https://picsum.photos/200'
        author:
          description: 'Name of an author or team'
          type: string
          example: 'Adam Nowak'
      type: object
    AppView:
      type: object
      allOf:
        - $ref: '#/components/schemas/App'
        - properties:
            permissions:
              description: 'Permission names'
              type: array
              items:
                type: string
                example: roles.show_details
    Audit:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        event:
          type: string
          example: updated
        created_at:
          description: 'Date of event'
          type: string
          example: '2021-10-10T12:00:00'
        old_values:
          type: array
          items:
            properties:
              key:
                type: string
                example: value
            type: object
        new_values:
          type: array
          items:
            properties:
              key:
                type: string
                example: value
            type: object
        user:
          $ref: '#/components/schemas/User'
      type: object
    Event:
      properties:
        key:
          description: 'Displayed event key'
          type: string
          example: PRODUCT_CREATED
        name:
          description: 'Displayed event name'
          type: string
          example: 'Product created'
        description:
          description: 'Displayed event description'
          type: string
          example: 'Event triggered when new products are created'
        required_permissions:
          description: 'List of Event required permissions'
          type: array
          items:
            type: string
            example: products.show
        required_hidden_permissions:
          description: 'List of Event required hidden permissions'
          type: array
          items:
            type: string
            example: products.show_hidden
      type: object
    OrderSummary:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        code:
          description: 'Product''s secondary identifier'
          type: string
          example: G3K4DH
        status:
          $ref: './schemas/Statuses.yml#/Status'
        paid:
          type: boolean
        payable:
          type: boolean
        summary:
          type: number
        shipping_method_id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        created_at:
          type: datetime
          example: '2021-09-13T11:11'
      type: object
    Page:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        slug:
          description: 'Name used in the URL path'
          type: string
          example: terms-and-conditions
        name:
          description: 'Name displayed as a page header'
          type: string
          example: 'Terms & Conditions'
        public:
          description: 'Whether page is visible to unauthorized users'
          type: boolean
          example: true
      type: object
    PageView:
      type: object
      allOf:
        - $ref: '#/components/schemas/Page'
        - properties:
            content_html:
              description: 'HTML formated text to be displayed as a main content under the page header'
              type: string
              example: '<h1>Lorem ipsum dolor sit amet</h1>'
            meta_description:
              description: 'Tag stripped and trimmed version of HTML content to use as meta data'
              type: string
              example: 'Lorem ipsum dolor sit amet'
            seo:
              $ref: '#/components/schemas/SeoView'
    Permission:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          description: 'Name of the permission'
          type: string
          example: products.add
        description:
          description: 'Description of the permission'
          type: string
          example: 'Permission to add products'
        assignable:
          description: 'Whether the role assignable by current user.'
          type: boolean
          example: true
      type: object
    Product:
      $ref: './schemas/Products.yml#/Product'
    ProductView:
      $ref: './schemas/Products.yml#/ProductView'
    ProfileView:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          description: 'Users name'
          type: string
          example: terms-and-conditions
        avatar:
          description: 'Name displayed as a page header'
          type: string
          example: 'Terms & Conditions'
        permissions:
          description: 'Permission names'
          type: array
          items:
            type: string
            example: roles.show_details
      type: object
    Role:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          description: 'Name of the role'
          type: string
          example: Admin
        description:
          description: 'Description of the role'
          type: string
          example: 'Role with permission to everything'
        assignable:
          description: 'Whether the role assignable by current user.'
          type: boolean
          example: true
        deletable:
          description: 'Whether the role can be deleted with appropreiate permissions.'
          type: boolean
          example: true
      type: object
    RoleView:
      type: object
      allOf:
        - $ref: '#/components/schemas/Role'
        - properties:
            permissions:
              description: 'Permission names'
              type: array
              items:
                type: string
                example: roles.show_details
            locked_permissions:
              description: 'Whether the permissions can be edited with appropreiate permissions.'
              type: boolean
              example: true
    User:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        email:
          description: 'User''s email address'
          type: string
          example: email@example.com
        name:
          description: 'User''s displayed name'
          type: string
          example: 'Johny Mielony'
        avatar:
          description: 'User''s avatar url'
          type: string
          example: //www.gravatar.com/avatar/example.jpg
        roles:
          description: 'User''s assigned roless'
          type: array
          items:
            $ref: '#/components/schemas/Role'
      type: object
    UserView:
      type: object
      allOf:
        - $ref: '#/components/schemas/User'
        - properties:
            permissions:
              description: 'User''s assigned permissions'
              type: array
              items:
                type: string
                example: roles.show_details
    WebHookEventLogEntry:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        triggered_at:
          description: 'Displayed webhook event triggered time'
          type: datetime
          example: '2021-10-07T08:49'
        url:
          description: 'Displayed webhook event url'
          type: string
          example: 'https://app.heseya.com'
        status_code:
          description: 'Webhook event status code'
          type: number
          example: 200
      type: object
    WebHook:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          description: 'Displayed webhook name'
          type: string
          example: 'WebHook name'
        url:
          description: 'Displayed webhook url'
          type: string
          example: 'https://app.heseya.com'
        secret:
          description: 'Displayed webhook secret'
          type: string
          example: secret
        with_issuer:
          description: 'Whether issuer is visible in WebHookEvent.'
          type: boolean
          example: true
        with_hidden:
          description: 'Whether hidden data are visible in WebHookEvent.'
          type: boolean
          example: true
        events:
          description: 'List of WebHook events'
          type: array
          items:
            type: string
            example: OrderCreated
        logs:
          description: 'List of WebHooks logs'
          type: array
          items:
            $ref: '#/components/schemas/WebHookEventLogEntry'
      type: object
    Address:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: 'Johny Mielony'
        address:
          type: string
          example: 'Gdańska 89/1'
        vat:
          type: string
          example: '9571099580'
        zip:
          type: string
          example: 80-200
        city:
          type: string
          example: Bydgoszcz
        country:
          type: string
          example: PL
        phone:
          type: string
          example: '+48543234123'
      type: object
    Country:
      properties:
        code:
          schema: Country
          type: string
          example: PL
        name:
          schema: Country
          type: string
          example: Poland
      type: object
    Deposit:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        quantity:
          type: number
          example: '12.5'
        item_id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        order_product_id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
      type: object
    Discount:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        code:
          type: string
          example: 83734AE
        description:
          type: string
          example: 'Balck Weekend 2021'
        type:
          type: number
          example: '0'
        discount:
          type: float
          example: '50'
        uses:
          type: float
          example: '41'
        max_uses:
          type: float
          example: '100'
        available:
          type: boolean
          example: 'true'
        starts_at:
          type: datetime
          example: '2021-09-13T11:11'
        expires_at:
          type: datetime
          example: '2021-09-13T11:11'
      type: object
    Item:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: Chain
        sku:
          type: string
          example: K121
        quantity:
          type: float
          example: '20'
      type: object
    Media:
      $ref: './schemas/Media.yml#Media'
    Option:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: XL
        price:
          description: 'Additional price the customer will have to pay after selecting this option (can be negative)'
          type: float
          example: 3.99
        disabled:
          description: 'Shows if the option has been disabled manually'
          type: boolean
          example: false
        available:
          description: 'Shows whether the option is available for purchase (in stock and not disabled)'
          type: boolean
          example: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      type: object
    Order:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        email:
          type: string
          example: admin@example.com
        comment:
          type: string
          example: 'asap plz'
        shipping_number:
          type: string
          example: '630552359128340015809770'
        shipping_price:
          type: number
          example: 18.7
        summary:
          type: number
        summary_paid:
          description: 'Summary amount of paid.'
          type: number
          example: 199.99
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        payable:
          type: boolean
        paid:
          type: boolean
        status:
          $ref: './schemas/Statuses.yml#/Status'
        shipping_method:
          $ref: '#/components/schemas/ShippingMethod'
        delivery_address:
          $ref: '#/components/schemas/Address'
        invoice_address:
          $ref: '#/components/schemas/Address'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
      type: object
    OrderProduct:
      properties:
        product_id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        quantity:
          type: number
          example: '12.4'
        price:
          type: number
          example: '199.99'
        schemas:
          type: array
          items:
            $ref: '#/components/schemas/OrderSchema'
      type: object
    OrderSchema:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: Size
        value:
          type: string
          example: XL
        price:
          type: number
          example: '49.99'
      type: object
    Payment:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        external_id:
          type: string
          example: D2spSDJ21LSA
        method:
          type: string
          example: heseya
        paid:
          type: boolean
        amount:
          type: number
          example: 80.92
        redirect_url:
          type: string
          example: 'https://pay.heseya.com/DS62SA'
        continue_url:
          type: string
          example: 'https://store.heseya.com/done/43SYK1'
      type: object
    PaymentMethod:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: 'Heseya Pay'
        alias:
          type: string
          example: heseya
        public:
          type: boolean
      type: object
    Price:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        value:
          type: number
          example: 19.97
        model_id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        model_type:
          type: string
          example: App\Models\Product
      type: object
    PriceRange:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        start:
          type: number
          example: 0
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
      type: object
    Schema:
      description: "Schema allows a product to take on new optional characteristics that can be\n *   chosen by the userand influences the price based on said choices. Schemas can use other\n *   schemas for their price calculation e.g. multiply_schema multiplies price of different\n *   schema based on it's own value. SCHEMAS USED BY OTHERS SHOULD NOT AFFECT THE PRICE\n *   (schema multiplied by multiply_schema adds 0 to the price while multiply_schema adds\n *   the multiplied value)"
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        type:
          description: "multiply_schema(min, max, step) type uses one schema and multiplies\n     *     it's price by own numeric value"
          type: string
          enum:
            - string
            - numeric
            - boolean
            - date
            - select
            - file
            - multiply
            - multiply_schema
        name:
          type: string
          example: Size
        description:
          description: 'Short description, no html or md allowed'
          type: string
        price:
          description: "Additional price the customer will have to pay after selecting the option\n     *     (can be negative)"
          type: float
          example: 9.99
        hidden:
          type: boolean
          example: false
        required:
          type: boolean
          example: false
        min:
          type: string
        max:
          type: string
        step:
          type: string
        default:
          type: string
        pattern:
          type: string
        validation:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
        used_schemas:
          description: "Array of schema id's given schema uses e.g.\n     *   multiply_schema type uses one schema of which price it miltiplies"
          type: array
          items:
            type: string
            example: used-schema-ids
      type: object
    Setting:
      properties:
        name:
          type: string
          example: setting-name
        value:
          type: string
        public:
          type: boolean
        permanent:
          type: boolean
      type: object
    ShippingMethod:
      properties:
        id:
          type: string
          example: 026bc5f6-8373-4aeb-972e-e78d72a67121
        name:
          type: string
          example: 'Next Day Courier'
        public:
          type: boolean
        black_list:
          type: boolean
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
        'price_ranges (request)':
          type: array
          items:
            properties:
              start:
                description: "start of the range (min = 0);\n     *         range goes from start to start of next range or infinity"
                type: number
                example: 0
              value:
                description: 'price in this range'
                type: number
                example: 18.7
            type: object
        'price_ranges (response)':
          type: array
          items:
            $ref: '#/components/schemas/PriceRange'
      type: object
    Status:
      $ref: './schemas/Statuses.yml#/Status'
    PackageTemplateSwagger:
      title: PackageTemplate
      properties:
        id:
          type: string
          example: 5fb4a472-b5fd-4e9a-a4ee-bf42bde86a73
        name:
          type: string
          example: 'Small package'
        wieght:
          description: 'Weight in kg'
          type: number
          example: 5.7
        width:
          description: 'Width in cm'
          type: integer
          example: 10
        height:
          description: 'Height in cm'
          type: integer
          example: 20
        depth:
          description: 'Depth in cm'
          type: integer
          example: 30
      type: object
    Tag:
      $ref: './schemas/Tags.yml#Tag'
    ProductSet:
      $ref: './schemas/ProductSets.yml#ProductSet'
    ProductSetChildren:
      $ref: './schemas/ProductSets.yml#ProductSetChildren'
    ProductSetParent:
      $ref: './schemas/ProductSets.yml#ProductSetParent'
    ProductSetParentChildren:
      $ref: './schemas/ProductSets.yml#ProductSetParentChildren'
    SeoStore:
      $ref: './schemas/Seo.yml#SeoStore'
    SeoView:
      $ref: './schemas/Seo.yml#SeoView'
    SeoKeywordsResponse:
      $ref: './schemas/Seo.yml#SeoKeywordsResponse'
  requestBodies:
    AppStore:
      content:
        application/json:
          schema:
            required:
              - url
              - allowed_permissions
            properties:
              url:
                description: 'Url of the applications microfrontend configuration page'
                type: string
                example: 'https://microfront.app.heseya.com'
              name:
                description: 'Name of the app'
                type: string
                example: 'Super App'
              licence_key:
                description: 'Licence key allowing to install application'
                type: string
                example: '6v5e*B^%e8n76rn869r6n9r75nim76E&%nm996f7e87m'
              allowed_permissions:
                description: 'Permissions granted to the app'
                type: array
                items:
                  type: string
                  example: products.add
              public_app_permissions:
                description: 'App permissions granted to unauthenticated users'
                type: array
                items:
                  type: string
                  example: review.add
            type: object
    IndexSchema:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
              hidden:
                type: boolean
                example: 'false'
              required:
                type: boolean
                example: 'true'
              search:
                type: string
              sort:
                type: string
            type: object
    OrderCreate:
      content:
        application/json:
          schema:
            properties:
              email:
                type: string
                example: admin@example.com
              comment:
                type: string
                example: 'asap plz'
              shipping_method_id:
                type: string
                example: 026bc5f6-8373-4aeb-972e-e78d72a67121
              items:
                type: array
                items:
                  properties:
                    product_id:
                      type: string
                      example: 026bc5f6-8373-4aeb-972e-e78d72a67121
                    quantity:
                      type: number
                    schemas:
                      properties:
                        119c0a63-1ea1-4769-8d5f-169f68de5598:
                          type: string
                          example: 123459fb-39a4-4dd0-8240-14793aa1f73b
                        02b97693-857c-4fb9-9999-47400ac5fbef:
                          type: string
                          example: 'HE + YA'
                      type: object
                  type: object
              delivery_address:
                $ref: '#/components/schemas/Address'
              invoice_address:
                $ref: '#/components/schemas/Address'
              discounts:
                type: array
                items: [ ]
            type: object
    OrderUpdate:
      content:
        application/json:
          schema:
            properties:
              email:
                type: string
                example: admin@example.com
              comment:
                type: string
                example: 'asap plz'
              delivery_address:
                $ref: '#/components/schemas/Address'
              invoice_address:
                $ref: '#/components/schemas/Address'
            type: object
    PageReorder:
      content:
        application/json:
          schema:
            properties:
              pages:
                type: array
                items: [ ]
            type: object
    PageStore:
      content:
        application/json:
          schema:
            required:
              - name
              - slug
              - content_html
            properties:
              name:
                description: 'Name displayed as a page header'
                type: string
                example: 'Terms & Conditions'
              slug:
                description: 'Name used in the URL path'
                type: string
                example: terms-and-conditions
              public:
                description: 'Whether page is visible to unauthorized users'
                type: boolean
                example: true
              content_html:
                description: 'HTML formated text to be displayed as a main content under the page header'
                type: string
                example: '<h1>Lorem ipsum dolor sit amet</h1>'
              seo:
                $ref: '#/components/schemas/SeoStore'
            type: object
    PageUpdate:
      content:
        application/json:
          schema:
            properties:
              name:
                description: 'Name displayed as a page header'
                type: string
                example: 'Terms & Conditions'
              slug:
                description: 'Name used in the URL path'
                type: string
                example: terms-and-conditions
              public:
                description: 'Whether page is visible to unauthorized users'
                type: boolean
                example: true
              content_html:
                description: 'HTML formated text to be displayed as a main content under the page header'
                type: string
                example: '<h1>Lorem ipsum dolor sit amet</h1>'
              seo:
                $ref: '#/components/schemas/SeoStore'
            type: object
    PasswordReset:
      content:
        application/json:
          schema:
            properties:
              email:
                type: string
                example: admin@example.com
            type: object
    PasswordResetSave:
      content:
        application/json:
          schema:
            properties:
              token:
                type: string
              email:
                type: string
                example: admin@example.com
              password:
                type: string
            type: object
    ProductStore:
      $ref: './requests/Products.yml#ProductStore'
    ProductUpdate:
      $ref: './requests/Products.yml#ProductUpdate'
    RoleStore:
      content:
        application/json:
          schema:
            required:
              - name
            properties:
              name:
                description: 'Name of the role'
                type: string
                example: Admin
              description:
                description: 'Description of the role'
                type: string
                example: 'Role with permission to everything'
              permissions:
                description: 'Permission names'
                type: array
                items:
                  type: string
                  example: roles.add
            type: object
    RoleUpdate:
      content:
        application/json:
          schema:
            properties:
              name:
                description: 'Name of the role'
                type: string
                example: Admin
              description:
                description: 'Description of the role'
                type: string
                example: 'Role with permission to everything'
              permissions:
                description: 'Permission names'
                type: array
                items:
                  type: string
                  example: roles.add
            type: object
    ShippingMethodIndex:
      content:
        application/json:
          schema:
            properties:
              country:
                type: string
              cart_value:
                type: float
            type: object
    ShippingMethodReorder:
      content:
        application/json:
          schema:
            properties:
              shipping_methods:
                type: array
                items:
                  type: string
                  example: 026bc5f6-8373-4aeb-972e-e78d72a67121
            type: object
    ShippingMethodStore:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: dpd
              public:
                type: boolean
                example: 'true'
              black_list:
                type: boolean
                example: 'false'
              payment_methods:
                type: array
                items:
                  type: string
                  example: 026bc5f6-8373-4aeb-972e-e78d72a67121
              countries:
                type: array
                items:
                  type: string
                  example: PL
              price_ranges:
                type: array
                items:
                  properties:
                    start:
                      description: "start of the range (min = 0);\n *             range goes from start to start of next range or infinity"
                      type: number
                      example: 0
                    value:
                      description: 'price in this range'
                      type: number
                      example: 18.7
                  type: object
            type: object
    ShippingMethodUpdate:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: dpd
              public:
                type: boolean
                example: 'true'
              black_list:
                type: boolean
                example: 'false'
              payment_methods:
                type: array
                items:
                  type: string
                  example: 026bc5f6-8373-4aeb-972e-e78d72a67121
              countries:
                type: array
                items:
                  type: string
                  example: PL
              price_ranges:
                type: array
                items:
                  properties:
                    start:
                      description: "start of the range (min = 0);\n *             range goes from start to start of next range or infinity"
                      type: number
                      example: 0
                    value:
                      description: 'price in this range'
                      type: number
                      example: 18.7
                  type: object
            type: object
    StatusReorderRequest:
      $ref: './requests/Statuses.yml#/StatusReorderRequest'
    UserCreate:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: 'Marianna Szulc'
              email:
                type: string
                example: admin@example.com
              password:
                type: string
                example: '123@@#abYZ'
              roles:
                description: 'Ids of assigned roles'
                type: array
                items:
                  type: string
                  example: 026bc5f6-8373-4aeb-972e-e78d72a67121
            type: object
    UserUpdate:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: 'Marianna Szulc'
              email:
                type: string
                example: admin@example.com
              roles:
                description: 'Ids of assigned roles'
                type: array
                items:
                  type: string
                  example: 026bc5f6-8373-4aeb-972e-e78d72a67121
            type: object
    WebHookCreate:
      content:
        application/json:
          schema:
            properties:
              name:
                description: 'Displayed webhook name'
                type: string
                example: 'WebHook name'
              url:
                description: 'Displayed webhook url'
                type: string
                example: 'https://app.heseya.com'
              secret:
                description: 'Displayed webhook secret'
                type: string
                example: secret
              with_issuer:
                description: 'Whether issuer is visible in WebHookEvent.'
                type: boolean
                example: true
              with_hidden:
                description: 'Whether hidden data are visible in WebHookEvent.'
                type: boolean
                example: true
              events:
                description: 'List of WebHook events'
                type: array
                items:
                  type: string
                  example: OrderCreated
            type: object
  securitySchemes:
    oauth:
      type: apiKey
      description: 'Use /login and past token in value field below in format (Bearer <token>)'
      scheme: bearer
      name: Authorization
      in: header
security:
  - oauth: [ ]
