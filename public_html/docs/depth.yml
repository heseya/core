openapi: 3.0.0
info:
  title: Store API
  version: 1.0.0

paths:
  '/products':
    get:
      summary: List of all products
      operationId: products
      tags:
        - Products
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  links:
                    $ref: '#/components/schemas/Links'
                  meta:
                    $ref: '#/components/schemas/Meta'

  '/products/{slug}':
    get:
      summary: One product detailed view
      operationId: products-view
      tags:
        - Products
      parameters:
        - name: slug
          in: path
          description: Product slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  '/orders/{code}':
    get:
      summary: Order details
      operationId: order-view
      tags:
        - Orders
      parameters:
        - name: code
          in: path
          description: Order code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  '/categories':
    get:
      summary: List of all categories
      operationId: categories
      tags:
        - Categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'

  '/brands':
    get:
      summary: List of all brands
      operationId: brands
      tags:
        - Brands
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'

components:
  schemas:
    Product:
      properties:
        slug:
          description: Slug
          type: string
          example: 'snake'
        name:
          description: Name
          type: string
          example: 'Snake'
        price:
          description: Price in active currency
          type: number
          example: 229.99
        description:
          description: Description in HTML
          type: string
          example: '<p>Awesome stuff!</p>'
        brand:
          $ref: '#/components/schemas/Brand'
        category:
          $ref: '#/components/schemas/Category'
        gallery:
          type: array
          items:
            $ref: '#/components/schemas/Media'

    Order:
      properties:
        code:
          description: Code
          type: string
          example: 'RX81VG'
        statuses:
          type: object
          properties:
            payment:
              $ref: '#/components/schemas/Status'
            shop:
              $ref: '#/components/schemas/Status'
            delivery:
              $ref: '#/components/schemas/Status'

    Status:
      properties:
        name:
          description: Status name
          type: string
          example: 'Done'
        color:
          description: Color
          type: string
          example: 'green'
        icon:
          description: Linear icon name
          type: string
          example: 'lnr-hourglass'

    Brand:
      properties:
        slug:
          description: Slug
          type: string
          example: 'depth'
        name:
          description: Name
          type: string
          example: 'Depth'

    Category:
      properties:
        slug:
          description: Slug
          type: string
          example: 'rings'
        name:
          description: Name
          type: string
          example: 'Rings'

    Media:
      properties:
        url:
          description: Media url
          type: string
          example: 'https://cnd.heseya.com/W128a7xZ12.jpg'
        type:
          description: Media type
          type: string
          enum: [photo, video]
          example: 'photo'

    Links:
      properties:
        first:
          description: First page url
          type: string
          example: 'https://heseya.com/link?page=1'
        last:
          description: Last page url
          type: string
          example: 'https://heseya.com/link?page=8'
        prev:
          description: Prev page url
          type: string
          example: null
        next:
          description: Next page url
          type: string
          example: 'https://heseya.com/link?page=2'

    Meta:
      properties:
        current_page:
          description: Current page number
          type: integer
          example: 1
        last_page:
          description: Last page number
          type: integer
          example: 8
        path:
          description: Current url
          type: string
          example: 'https://heseya.com/link?page=1'
        from:
          description: First product number on this page
          type: integer
          example: 1
        to:
          description: Last product number on this page
          type: integer
          example: 12
        per_page:
          description: Number of models per page
          type: integer
          example: 12
        total:
          description: Number of all models
          type: integer
          example: 100

    Error:
      properties:
        message:
          description: Więcej informacji o błędzie
          type: string
          example: some error message

  responses:
    UnauthorizedError:
      description: Endpoint tylko za zalogowanych użytkowników
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OrganizationAccessError:
      description: Użytkownik nie należy do tej organizacji
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
