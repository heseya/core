<?php

namespace App\Enums;

use App\Enums\Traits\EnumTrait;

enum ValidationError: string
{
    use EnumTrait;

    case REQUIRED = 'VALIDATION_REQUIRED';
    case STRING = 'VALIDATION_STRING';
    case NUMERIC = 'VALIDATION_NUMERIC';
    case ARRAY = 'VALIDATION_ARRAY';
    case MIN = 'VALIDATION_MIN';
    case MAX = 'VALIDATION_MAX';
    case BETWEEN = 'VALIDATION_BETWEEN';
    case DIGITS = 'VALIDATION_DIGITS';
    case ALPHA = 'VALIDATION_ALPHA';
    case EMAIL = 'VALIDATION_EMAIL';
    case EXISTS = 'VALIDATION_EXISTS';
    case FILE = 'VALIDATION_FILE';
    case REGEX = 'VALIDATION_REGEX';
    case SIZE = 'VALIDATION_SIZE';
    case UNIQUE = 'VALIDATION_UNIQUE';
    case URL = 'VALIDATION_URL';
    case UUID = 'VALIDATION_UUID';
    case PASSWORD = 'VALIDATION_PASSWORD';
    case PASSWORDLENGTH = 'VALIDATION_PASSWORD_LENGTH';
    case PASSWORDCOMPROMISED = 'VALIDATION_PASSWORD_COMPROMISED';
    case DATE = 'VALIDATION_DATE';
    case DISTINCT = 'VALIDATION_DISTINCT';
    case IN = 'VALIDATION_IN';
    case PRESENT = 'VALIDATION_PRESENT';
    case INTEGER = 'VALIDATION_INTEGER';
    case FILLED = 'VALIDATION_FILLED';
    case ALPHADASH = 'VALIDATION_ALPHA_DASH';
    case MIMETYPES = 'VALIDATION_MIMETYPES';
    case BEFOREOREQUAL = 'VALIDATION_BEFORE_OR_EQUAL';
    case REQUIREDWITH = 'VALIDATION_REQUIRED_WITH';
    case UNIQUEIDINREQUEST = 'VALIDATION_UNIQUE_ID_IN_REQUEST';
    case APPUNIQUEURL = 'VALIDATION_APP_UNIQUE_ID';
    case ATTRIBUTEOPTIONEXIST = 'VALIDATION_ATTRIBUTE_OPTION_EXISTS';
    case BOOLEAN = 'VALIDATION_BOOLEAN';
    case CANSHOWPRIVATEMETADATA = 'VALIDATION_CAN_SHOW_PRIVATE_METADATA';
    case CONSENTEXISTS = 'VALIDATION_CONSENT_EXISTS';
    case DECIMAL = 'VALIDATION_DECIMAL';
    case ENUMKEY = 'VALIDATION_ENUM_KEY';
    case EVENTEXIST = 'VALIDATION_EVENT_EXISTS';
    case OPTIONAVAILABLE = 'VALIDATION_OPTION_AVAILABLE';
    case PRODUCTATTRIBUTEOPTIONS = 'VALIDATION_PRODUCT_ATTRIBUTE_OPTIONS';
    case PROHIBITEDUNLESS = 'VALIDATION_PROHIBITED_UNLESS';
    case PROHIBITEDWITH = 'VALIDATION_PROHIBITED_WITH';
    case PROHIBITEDIF = 'VALIDATION_PROHIBITED_IF';
    case REQUIREDCONSENTS = 'VALIDATION_REQUIRED_CONSENTS';
    case SHIPPINGMETHODPRICERANGES = 'VALIDATION_SHIPPING_METHOD_PRICE_RANGES';
    case AFTEROREQUAL = 'VALIDATION_AFTER_OR_EQUAL';
    case ENUMVALUE = 'VALIDATION_ENUM_VALUE';
    case REQUIREDWITHALL = 'VALIDATION_REQUIRED_WITH_ALL';
    case GTE = 'VALIDATION_GTE';
    case MEDIASLUG = 'VALIDATION_MEDIA_SLUG';
    case PHONE = 'VALIDATION_PHONE';
    case AUTHPROVIDERACTIVE = 'VALIDATION_AUTH_PROVIDER_ACTIVE';
    case PRICE = 'PRICE';
    case PROHIBITED = 'PROHIBITED';
    case UNLIMITEDSHIPPINGTIME = 'VALIDATION_UNLIMITED_SHIPPING_TIME';
    case UNLIMITEDSHIPPINGDATE = 'VALIDATION_UNLIMITED_SHIPPING_DATE';
    case SHIPPINGPLACEVALIDATION = 'VALIDATION_SHIPPING_PLACE';
    case FULLNAME = 'VALIDATION_FULL_NAME';
    case STREETNUMBER = 'VALIDATION_STREET_NUMBER';
    case SCHEMAOPTION = 'VALIDATION_PRODUCT_SCHEMA_OPTION';

    case INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';

    // Alias
    public const REQUIREDCONSENTSUPDATE = self::REQUIREDCONSENTS;
    public const PRODUCTPUBLIC = self::EXISTS;
}
